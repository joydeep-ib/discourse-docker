events {
  worker_connections 768;
}

error_log /dev/stdout info;

http {
  access_log /dev/stdout;

  server{
    listen 8080;
    location /stub_status {
        stub_status   on;
    }
  }

  server {
    listen 80;

    location /community/assets {
      rewrite ^/community/assets(.*) /$1 break;

      root /data/assets;
    }

    location /community/images {
      rewrite ^/community/images(.*) /$1 break;

      root /data/images;
    }

    location /community/javascripts {
      rewrite ^/community/javascripts(.*) /$1 break;

      root /data/javascripts;
    }

    location /community/plugins {
      rewrite ^/community/plugins(.*) /$1 break;

      root /data/plugins;
    }

    location /community/nginx-health {
      default_type text/html;
      return 200 "<!DOCTYPE html><h2>gangnam style!</h2>\n";
    }

    # Nginx will reject anything not matching /api
    location /community {
      # Nginx will handle gzip compression of responses from the app server
      gzip on;
      gzip_proxied any;
      gzip_types text/plain application/json;
      gzip_min_length 1000;


      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # rewrite /community /community/;
      # rewrite ^/community/(.*) /$1 break;

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://localhost:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }
  }
}
